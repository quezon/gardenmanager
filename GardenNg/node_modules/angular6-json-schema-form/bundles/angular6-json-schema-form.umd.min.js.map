{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular6-json-schema-form/lib/shared/utility.functions.ts","ng://angular6-json-schema-form/lib/shared/validator.functions.ts","ng://angular6-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://angular6-json-schema-form/lib/shared/merge-schemas.function.ts","ng://angular6-json-schema-form/lib/shared/json-schema.functions.ts","ng://angular6-json-schema-form/lib/shared/format-regex.constants.ts","ng://angular6-json-schema-form/lib/shared/json.validators.ts","ng://angular6-json-schema-form/lib/shared/form-group.functions.ts","ng://angular6-json-schema-form/lib/shared/layout.functions.ts","ng://angular6-json-schema-form/lib/locale/en-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/fr-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/zh-validation-messages.ts","ng://angular6-json-schema-form/lib/json-schema-form.service.ts","ng://angular6-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://angular6-json-schema-form/lib/framework-library/framework.ts","ng://angular6-json-schema-form/lib/widget-library/add-reference.component.ts","ng://angular6-json-schema-form/lib/widget-library/button.component.ts","ng://angular6-json-schema-form/lib/widget-library/checkbox.component.ts","ng://angular6-json-schema-form/lib/shared/date.functions.ts","ng://angular6-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://angular6-json-schema-form/lib/widget-library/file.component.ts","ng://angular6-json-schema-form/lib/widget-library/input.component.ts","ng://angular6-json-schema-form/lib/widget-library/message.component.ts","ng://angular6-json-schema-form/lib/widget-library/none.component.ts","ng://angular6-json-schema-form/lib/widget-library/number.component.ts","ng://angular6-json-schema-form/lib/widget-library/one-of.component.ts","ng://angular6-json-schema-form/lib/widget-library/radios.component.ts","ng://angular6-json-schema-form/lib/widget-library/root.component.ts","ng://angular6-json-schema-form/lib/widget-library/section.component.ts","ng://angular6-json-schema-form/lib/widget-library/select.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-framework.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-widget.component.ts","ng://angular6-json-schema-form/lib/widget-library/submit.component.ts","ng://angular6-json-schema-form/lib/widget-library/tabs.component.ts","ng://angular6-json-schema-form/lib/widget-library/template.component.ts","ng://angular6-json-schema-form/lib/widget-library/textarea.component.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.service.ts","ng://angular6-json-schema-form/lib/framework-library/framework-library.service.ts","ng://angular6-json-schema-form/lib/json-schema-form.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://angular6-json-schema-form/lib/widget-library/hidden.component.ts","ng://angular6-json-schema-form/lib/widget-library/tab.component.ts","ng://angular6-json-schema-form/lib/widget-library/orderable.directive.ts","ng://angular6-json-schema-form/lib/widget-library/index.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.module.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://angular6-json-schema-form/lib/json-schema-form.module.ts","ng://angular6-json-schema-form/lib/angular-flex-monkey-patch.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","ExpressionType","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","_executeValidators","control","validators","invert","map","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","tslib_1.__values","objects_1_1","currentObject","isObject","_c","keys","_d","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","undefined","hasValue","isArray","isString","isNumber","strict","isNaN","isInteger","option","item","toString","isDate","isMap","isSet","isType","type","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","slice","getTime","toSchemaType","includes","testValue","isPromise","object","then","isObservable","subscribe","toObservable","observable","from","Observable","array","allIn","subItem","value1","value2","addClasses","oldClasses","newClasses","badType","toSet","Set","split","combinedSet","forEach","add","join","copy","errors","Map","fn","recurse","rootObject","_b","forEachCopy","newObject","hasOwn","property","has","isEqual","expressionType","EQUALS","isNotEqual","NOT_EQUALS","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","filter","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","keyArray","parse","subObject","keyArray_1","keyArray_1_1","evaluatedExpression","JsonPointer_1","evaluateExpression","passed","logErrors","defaultResult","keysAndExpression","parseKeysAndExpression","ownCheckResult","doOwnCheckResult","keyAndValue","cleanedValue","charAt","evaluatedResult","performExpressionOnValue","propertyByKey","doComparisonByExpressionType","keyOrSubObjEmpty","expressionCandidate","NOT_AN_EXPRESSION","isNotExpression","getKeyAndValueByExpressionType","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","toKey","every","test","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","schema","firstKey","shift","properties","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","nextCB","RegExp","Injectable","mergeSchemas","schemas","some","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","allOf","item1","findIndex","item2","combinedObject","_e","_f","subKey","definitions","_g","_h","required","combinedDependency","schemaDependency","dependencies","gcd_1","multipleOf","Math","min","max","notAnyOf","reduce","notAnyOfArray","notSchema","anyOf","not","_j","_k","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_l","_m","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","newSchema","getFieldType","fieldType","integer","null","buildSubSchema","$schema","size","a","minItems","getFromSchema","returnType","subSchema","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","maxItems","getTitleMapFromOneOf","color","date","date-time","email","uri","format","oneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","options","newOptions","fixUiKeys","formOptions","defautWidgetOptions","_a","newTitleMap","flatList","titleMap","enum","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","const","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","exclusive","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","cloneDeep","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","jsonSchemaFormatTests","time","hostname","ipv4","ipv6","uri-reference","uri-template","url","uuid","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","allowedValues","isEqualVal","enumValue","inputValue","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","requiredFormat","isValid","formatTest","minimum","minimumValue","exclusiveMinimum","exclusiveMinimumValue","maximum","maximumValue","exclusiveMaximum","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","minimumItems","currentItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","actual","requiredTrue","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","validatorFns","validatorFn","parameters","groupControls_1","newControl","FormGroup","FormArray","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","enValidationMessages","log10","frValidationMessages","zhValidationMessages","JsonSchemaFormService","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","ajvOptions","jsonPointers","unknownFormats","ajv","Ajv","validateFormData","formGroupTemplate","framework","validData","ajvErrors","validationErrors","dataErrors","formValueSubscription","dataChanges","Subject","isValidChanges","validationErrorChanges","","language","defaultFormOptions","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","widgets","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","addMetaSchema","jsonDraft6","fr","en","zh","getData","getSchema","getLayout","resetAllValues","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","dataPath","message","compileAjvSchema","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","all","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","statusChanges","getDataPointer","addSpaces","string","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","convertSchemaToDraft6","draft","changed","simpleTypes","contentEncoding","media","binaryEncoding","extends","disallow","maxDecimal","pow","divisibleBy","minimumCanEqual","maximumCanEqual","properties_1","requiredKeys_1","optional","requires","dependencies_1","id","$id","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","number","newType","tslib_1.__spread","default","typeSchema","newKey_1","Framework","stylesheets","scripts","AddReferenceComponent","ngOnInit","event","preventDefault","parent","itemCount","tslib_1.__decorate","Input","Component","selector","changeDetection","ChangeDetectionStrategy","Default","ButtonComponent","onClick","CheckboxComponent","trueValue","falseValue","dateToString","dateFormat","stringToDate","getFullYear","getMonth","getDay","getDate","last","1","2","3","ordinal","dateString","findDate","dateParts","part","thisYear","Date","year","foundDate","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","autoCompleteList","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowNegative","allowDecimal","allowExponents","lastValidNumber","OneOfComponent","RadiosComponent","radiosList","RootComponent","isFlexItem","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","newComponent","updateComponent","ngOnChanges","widgetContainer","createComponent","resolveComponentFactory","instance","ViewChild","read","ViewContainerRef","static","ComponentFactoryResolver","SelectWidgetComponent","SubmitComponent","TabsComponent","selectedItem","showAddTab","updateControl","select","lastItem","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","defaultWidget","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","registeredWidgets","frameworkWidgets","activeWidgets","setActiveWidgets","widgetName","usedAliases","setDefaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","FrameworkLibraryService","frameworks","activeFramework","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","getFrameworkScripts","tslib_1.__param","Inject","JSON_SCHEMA_FORM_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JsonSchemaFormComponent","multi","changeDetector","sanitizer","formInitialized","objectWrap","previousInputs","form","JSONSchema","UISchema","onChanges","EventEmitter","onSubmit","formSchema","dataChange","modelChange","formDataChange","ngModelChange","setFormValues","bypassSecurityTrustResourceUrl","stylesheet","script","updateForm","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","changedInput","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","markForCheck","validateOnRender_1","touchAll_1","markAsTouched","Output","OnPush","providers","ChangeDetectorRef","DomSanitizer","NoFrameworkComponent","NoFramework","_super","tslib_1.__extends","HiddenComponent","TabComponent","OrderableDirective","elementRef","ngZone","overParentElement","overChildElement","element","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","setData","sourceArrayIndex","sessionStorage","setItem","dropEffect","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","BASIC_WIDGETS","WidgetLibraryModule","forRoot","ngModule","WidgetLibraryModule_1","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkModule","useClass","FlexLayoutRootComponent","FlexLayoutSectionComponent","fxLayout","fxLayoutWrap","MaterialAddReferenceComponent","MaterialButtonComponent","MaterialButtonGroupComponent","vertical","MaterialCheckboxComponent","showSlideToggle","MaterialCheckboxesComponent","horizontalList","checkedItems","updateAllValues","MaterialChipListComponent","MaterialDatepickerComponent","matFormFieldDefaultOptions","matLabelGlobalOptions","setDate","placeholder","MAT_FORM_FIELD_DEFAULT_OPTIONS","Optional","MAT_LABEL_GLOBAL_OPTIONS","MaterialDesignFrameworkComponent","frameworkInitialized","parentArray","dynamicTitle","widgetOptions","initializeFramework","updateTitle","widgetLayoutNode","MaterialFileComponent","MaterialInputComponent","MaterialNumberComponent","MaterialOneOfComponent","MaterialRadiosComponent","flexDirection","MaterialSelectComponent","MaterialSliderComponent","MaterialStepperComponent","MaterialTabsComponent","MaterialTextareaComponent","MaterialDesignFramework","button-group","chip-list","slider","stepper","any-of","card","expansion-panel","JsonSchemaFormModule","MediaMarshallerUpdateElement","MediaMarshaller","updateElement","MATERIAL_FRAMEWORK_COMPONENTS","ANGULAR_MATERIAL_MODULES","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","MaterialDesignFrameworkModule","FlexLayoutModule","Bootstrap3FrameworkComponent","isInputWidget","setTitle","htmlClass","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","itemLabelHtmlClass","fieldHtmlClass","messageLocation","icon","updateHelpBlock","thisVar","helpBlock","dirty","Bootstrap3Framework","Bootstrap3FrameworkModule","Bootstrap4FrameworkComponent","Bootstrap4Framework","Bootstrap4FrameworkModule","toPromise"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {hasValue, inArray, isArray, isDefined, isEmpty, isMap, isObject, isSet, isString, PlainObject} from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * Types of possible expressions which the app is able to evaluate.\n */\nexport enum ExpressionType {\n  EQUALS,\n  NOT_EQUALS,\n  NOT_AN_EXPRESSION\n}\n\n/**\n * Detects the type of expression from the given candidate. `==` for equals,\n * `!=` for not equals. If none of these are contained in the candidate, the candidate\n * is not considered to be an expression at all and thus `NOT_AN_EXPRESSION` is returned.\n * // {expressionCandidate} expressionCandidate - potential expression\n */\nexport function getExpressionType(expressionCandidate: string): ExpressionType {\n  if (expressionCandidate.indexOf('==') !== -1) {\n    return ExpressionType.EQUALS;\n  }\n\n  if (expressionCandidate.toString().indexOf('!=') !== -1) {\n    return ExpressionType.NOT_EQUALS;\n  }\n\n  return ExpressionType.NOT_AN_EXPRESSION;\n}\n\nexport function isEqual(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.EQUALS;\n}\n\nexport function isNotEqual(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.NOT_EQUALS;\n}\n\nexport function isNotExpression(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.NOT_AN_EXPRESSION;\n}\n\n/**\n * Splits the expression key by the expressionType on a pair of values\n * before and after the equals or nor equals sign.\n * // {expressionType} enum of an expression type\n * // {key} the given key from a for loop iver all conditions\n */\nexport function getKeyAndValueByExpressionType(expressionType: ExpressionType, key: string) {\n  if (isEqual(expressionType)) {\n    return key.split('==', 2);\n  }\n\n  if (isNotEqual(expressionType)) {\n    return key.split('!=', 2);\n  }\n\n  return null;\n}\n\nexport function cleanValueOfQuotes(keyAndValue): String {\n  if (keyAndValue.charAt(0) === '\\'' && keyAndValue.charAt(keyAndValue.length - 1) === '\\'') {\n    return keyAndValue.replace('\\'', '').replace('\\'', '');\n  }\n  return keyAndValue;\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { AbstractControl } from '@angular/forms';\nimport { from, Observable } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Object]';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item) ||\n    Object.prototype.toString.call(item) === '[object Array]';\n}\n\nexport function isDate(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {\n  cleanValueOfQuotes,\n  copy,\n  ExpressionType,\n  getExpressionType,\n  getKeyAndValueByExpressionType,\n  hasOwn,\n  isEqual,\n  isNotEqual,\n  isNotExpression\n} from './utility.functions';\nimport {Injectable} from '@angular/core';\nimport {isArray, isDefined, isEmpty, isMap, isNumber, isObject, isString} from './validator.functions';\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          const evaluatedExpression = JsonPointer.evaluateExpression(subObject, key);\n          if (evaluatedExpression.passed) {\n            subObject = evaluatedExpression.key ? subObject[evaluatedExpression.key] : subObject;\n          } else {\n            this.logErrors(errors, key, pointer, object);\n            return getBoolean ? false : undefined;\n          }\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  private static logErrors(errors, key, pointer, object) {\n    if (errors) {\n      console.error(`get error: \"${key}\" key not found in object.`);\n      console.error(pointer);\n      console.error(object);\n    }\n  }\n\n  /**\n   * Evaluates conditional expression in form of `model.<property>==<value>` or\n   * `model.<property>!=<value>` where the first one means that the value must match to be\n   * shown in a form, while the former shows the property only when the property value is not\n   * set, or does not equal the given value.\n   *\n   * // { subObject } subObject -  an object containing the data values of properties\n   * // { key } key - the key from the for loop in a form of `<property>==<value>`\n   *\n   * Returns the object with two properties. The property passed informs whether\n   * the expression evaluated successfully and the property key returns either the same\n   * key if it is not contained inside the subObject or the key of the property if it is contained.\n   */\n  static evaluateExpression(subObject: Object, key: any) {\n    const defaultResult = {passed: false, key: key};\n    const keysAndExpression = this.parseKeysAndExpression(key, subObject);\n    if (!keysAndExpression) {\n      return defaultResult;\n    }\n\n    const ownCheckResult = this.doOwnCheckResult(subObject, keysAndExpression);\n    if (ownCheckResult) {\n      return ownCheckResult;\n    }\n\n    const cleanedValue = cleanValueOfQuotes(keysAndExpression.keyAndValue[1]);\n\n    const evaluatedResult = this.performExpressionOnValue(keysAndExpression, cleanedValue, subObject);\n    if (evaluatedResult) {\n      return evaluatedResult;\n    }\n\n    return defaultResult;\n  }\n\n  /**\n   * Performs the actual evaluation on the given expression with given values and keys.\n   * // { cleanedValue } cleanedValue - the given valued cleaned of quotes if it had any\n   * // { subObject } subObject - the object with properties values\n   * // { keysAndExpression } keysAndExpression - an object holding the expressions with\n   */\n  private static performExpressionOnValue(keysAndExpression: any, cleanedValue: String, subObject: Object) {\n    const propertyByKey = subObject[keysAndExpression.keyAndValue[0]];\n    if (this.doComparisonByExpressionType(keysAndExpression.expressionType, propertyByKey, cleanedValue)) {\n      return {passed: true, key: keysAndExpression.keyAndValue[0]};\n    }\n\n    return null;\n  }\n\n  private static doComparisonByExpressionType(expressionType: ExpressionType, propertyByKey, cleanedValue: String): Boolean {\n    if (isEqual(expressionType)) {\n      return propertyByKey === cleanedValue;\n    }\n    if (isNotEqual(expressionType)) {\n      return propertyByKey !== cleanedValue;\n    }\n    return false;\n  }\n\n  /**\n   * Does the checks when the parsed key is actually no a property inside subObject.\n   * That would mean that the equal comparison makes no sense and thus the negative result\n   * is returned, and the not equal comparison is not necessary because it doesn't equal\n   * obviously. Returns null when the given key is a real property inside the subObject.\n   * // { subObject } subObject - the object with properties values\n   * // { keysAndExpression } keysAndExpression - an object holding the expressions with\n   * the associated keys.\n   */\n  private static doOwnCheckResult(subObject: Object, keysAndExpression) {\n    let ownCheckResult = null;\n    if (!hasOwn(subObject, keysAndExpression.keyAndValue[0])) {\n      if (isEqual(keysAndExpression.expressionType)) {\n        ownCheckResult = {passed: false, key: null};\n      }\n      if (isNotEqual(keysAndExpression.expressionType)) {\n        ownCheckResult = {passed: true, key: null};\n      }\n    }\n    return ownCheckResult;\n  }\n\n  /**\n   * Does the basic checks and tries to parse an expression and a pair\n   * of key and value.\n   * // { key } key - the original for loop created value containing key and value in one string\n   * // { subObject } subObject - the object with properties values\n   */\n  private static parseKeysAndExpression(key: string, subObject) {\n    if (this.keyOrSubObjEmpty(key, subObject)) {\n      return null;\n    }\n    const expressionType = getExpressionType(key.toString());\n    if (isNotExpression(expressionType)) {\n      return null;\n    }\n    const keyAndValue = getKeyAndValueByExpressionType(expressionType, key);\n    if (!keyAndValue || !keyAndValue[0] || !keyAndValue[1]) {\n      return null;\n    }\n    return {expressionType: expressionType, keyAndValue: keyAndValue};\n  }\n\n  private static keyOrSubObjEmpty(key: any, subObject: Object) {\n    return !key || !subObject;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (const item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (const [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      const newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      const parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    const results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (const key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (const key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    const keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = '';\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   *\n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (const pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  }\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   *\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      const pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    const controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (const key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      const parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","import isEqual from 'lodash-es/isEqual';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description': case '$comment':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport { forEach, hasOwn, mergeFilteredObject } from './utility.functions';\nimport {\n  getType,\n  hasValue,\n  inArray,\n  isArray,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { mergeSchemas } from './merge-schemas.function';\n\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  const newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (const key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true;\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  const controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      const itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n}\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  const newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        const [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  const validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          const eLimit = 'exclusive' + ucLimit;\n          const limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * //\n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * //\n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  // tslint:disable-next-line:max-line-length\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  // tslint:disable-next-line:max-line-length\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // tslint:disable-next-line:max-line-length\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // tslint:disable-next-line:max-line-length\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  // tslint:disable-next-line:max-line-length\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  // tslint:disable-next-line:max-line-length\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function (str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date' | 'time' | 'date-time' | 'email' | 'hostname' | 'ipv4' | 'ipv6' |\n  'uri' | 'uri-reference' | 'uri-template' | 'url' | 'uuid' | 'color' |\n  'json-pointer' | 'relative-json-pointer' | 'regex';\n","import isEqual from 'lodash-es/isEqual';\nimport {\n  _executeAsyncValidators,\n  _executeValidators,\n  _mergeErrors,\n  _mergeObjects,\n  AsyncIValidatorFn,\n  getType,\n  hasValue,\n  isArray,\n  isBoolean,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isString,\n  isType,\n  IValidatorFn,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toObservable,\n  xor\n  } from './validator.functions';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { forEachCopy } from './utility.functions';\nimport { forkJoin } from 'rxjs';\nimport { JsonSchemaFormatNames, jsonSchemaFormatTests } from './format-regex.constants';\nimport { map } from 'rxjs/operators';\n\n\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  }\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqualVal = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqualVal(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqualVal(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqualVal = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqualVal(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      const currentValue: string = control.value;\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      const currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (const requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              const requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const sorted: any[] = control.value.slice().sort();\n      const duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      const isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      const isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      const validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      const isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      const arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      const isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const error = validator(control, !invert);\n      const isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  }\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      // tslint:disable-next-line:max-line-length\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport filter from 'lodash-es/filter';\nimport map from 'lodash-es/map';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn\n  } from '@angular/forms';\nimport { forEach, hasOwn } from './utility.functions';\nimport { getControlValidators, removeRecursiveReferences } from './json-schema.functions';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isDate,\n  isDefined,\n  isEmpty,\n  isObject,\n  isPrimitive,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toSchemaType\n  } from './validator.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\n\n\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any, nodeValue: any = null, setValues = true,\n  schemaPointer = '', dataPointer = '', templatePointer = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (!isDefined(nodeValue) && (\n      jsf.formOptions.setSchemaDefaults === true ||\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n    )) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\n  const controlType =\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\n      schemaType === 'object' ? 'FormGroup' :\n      (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\n        schemaType === 'array' ? 'FormArray' :\n        !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\n  const shortDataPointer =\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has('schemaType')) {\n    nodeOptions.set('schemaPointer', schemaPointer);\n    nodeOptions.set('schemaType', schema.type);\n    if (schema.format) {\n      nodeOptions.set('schemaFormat', schema.format);\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\n    }\n    if (controlType) {\n      nodeOptions.set('templatePointer', templatePointer);\n      nodeOptions.set('templateType', controlType);\n    }\n  }\n  let controls: any;\n  const validators = getControlValidators(schema);\n  switch (controlType) {\n\n    case 'FormGroup':\n      controls = {};\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\n        const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n          const unnamedKeys = Object.keys(schema.properties)\n            .filter(key => !propertyKeys.includes(key));\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === '*') {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(key => hasOwn(schema.properties, key) ||\n            hasOwn(schema, 'additionalProperties')\n          )\n          .forEach(key => controls[key] = buildFormGroupTemplate(\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\n            schemaPointer + (hasOwn(schema.properties, key) ?\n              '/properties/' + key : '/additionalProperties'\n            ),\n            dataPointer + '/' + key,\n            templatePointer + '/controls/' + key\n          ));\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case 'FormArray':\n      controls = [];\n      const minItems =\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\n      const maxItems =\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\n        const tupleItems = nodeOptions.get('tupleItems') ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(buildFormGroupTemplate(\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\n              schemaPointer + '/items/' + i,\n              dataPointer + '/' + i,\n              templatePointer + '/controls/' + i\n            ));\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf, null, setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + '/controls/' + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaPointer + '/items/' + i,\n                  dataPointer + '/' + i,\n                  templatePointer + '/controls/' + i\n                ) :\n                itemRecursive ?\n                  null : cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\n          additionalItemsPointer = schemaPointer + '/additionalItems';\n        }\n\n        // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + '/items';\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf, null, setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + '/controls/-'\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, 'required')) {\n          const arrayLength = Math.min(Math.max(\n            itemRecursive ? 0 :\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), maxItems);\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaRefPointer,\n                  dataPointer + '/-',\n                  templatePointer + '/controls/-'\n                ) :\n                itemRecursive ?\n                  null : cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case '$ref':\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case 'FormControl':\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get('disabled') || false\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n*/\nexport function buildFormGroup(template: any): AbstractControl {\n  const validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  if (hasOwn(template, 'validators')) {\n    forEach(template.validators, (parameters, validator) => {\n      if (typeof JsonValidators[validator] === 'function') {\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\n      }\n    });\n    if (validatorFns.length &&\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\n    ) {\n      validatorFn = validatorFns.length > 1 ?\n        JsonValidators.compose(validatorFns) : validatorFns[0];\n    }\n  }\n  if (hasOwn(template, 'controlType')) {\n    switch (template.controlType) {\n      case 'FormGroup':\n        const groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          const newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) { groupControls[key] = newControl; }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case 'FormArray':\n        return new FormArray(filter(map(template.controls,\n          controls => buildFormGroup(controls)\n        )), validatorFn);\n      case 'FormControl':\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (const currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (typeof currentValue === 'object' &&\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [...currentValue];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== 'object') {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (const value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        const newValues = [];\n        for (const value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\n    requiredArray = forEach(requiredArray,\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any, dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\n  returnEmptyFields = false, fixErrors = false\n): any {\n  if (formData === null || typeof formData !== 'object') { return formData; }\n  const formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      const genericPointer =\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\n          dataMap.get(genericPointer).get('schemaType');\n        if (schemaType === 'null') {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if ((hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\n        ) {\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n          // If returnEmptyFields === false,\n          // only add empty arrays and objects to required keys\n        } else if (schemaType === 'object' && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\n            const keySchemaType =\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\n            if (keySchemaType === 'array') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === 'object') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n            // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n            // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (typeof value !== 'object' || isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error('formatFormData error: ' +\n          `Schema type not found for form value at ${genericPointer}`);\n        console.error('dataMap', dataMap);\n        console.error('recursiveRefMap', recursiveRefMap);\n        console.error('genericPointer', genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any, dataPointer: Pointer, returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === 'string') {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) { return formControl; }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (typeof formGroup.get === 'function' &&\n    dataPointerArray.every(key => key.indexOf('.') === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join('.'));\n    if (formControl) { return formControl; }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (const key of dataPointerArray) {\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\n    if (isArray(subGroup) && (key === '-')) {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import uniqueId from 'lodash-es/uniqueId';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport {\n  checkInlineType,\n  getFromSchema,\n  getInputType,\n  isInputRequired,\n  removeRecursiveReferences,\n  updateInputOptions\n  } from './json-schema.functions';\nimport {\n  copy,\n  fixTitle,\n  forEach,\n  hasOwn\n  } from './utility.functions';\nimport {\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { TitleMapItem } from '../json-schema-form.service';\n\n\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * //\n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    const newNode: any = {\n      _id: uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n          // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n          // Angular JSON Schema Form 'validationMessages'\n          // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code === '0' ? 'type' :\n                  code === '1' ? 'enum' :\n                    code === '100' ? 'multipleOf' :\n                      code === '101' ? 'minimum' :\n                        code === '102' ? 'exclusiveMinimum' :\n                          code === '103' ? 'maximum' :\n                            code === '104' ? 'exclusiveMaximum' :\n                              code === '200' ? 'minLength' :\n                                code === '201' ? 'maxLength' :\n                                  code === '202' ? 'pattern' :\n                                    code === '300' ? 'minProperties' :\n                                      code === '301' ? 'maxProperties' :\n                                        code === '302' ? 'required' :\n                                          code === '304' ? 'dependencies' :\n                                            code === '400' ? 'minItems' :\n                                              code === '401' ? 'maxItems' :\n                                                code === '402' ? 'uniqueItems' :\n                                                  code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n        // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (const item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        const itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          const arrayItemGroup = [];\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            const subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              const arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n            newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n            // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * //\n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n      // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n      // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * //\n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    const realIndex = +index + indexPad;\n    const newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n}\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n    // Otherwise, return referenced layout\n  } else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (const i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (const i of Object.keys(enumList)) {\n        const value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          const name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (const value of Object.keys(titleMap)) {\n        const name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (const i of Object.keys(enumList)) {\n      const name = enumList[i];\n      const value = enumList[i];\n      newTitleMap.push({ name, value });\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [{ name: 'True', value: true }, { name: 'False', value: false }];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n      // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const zhValidationMessages: any = { // Chinese error messages\n  required: 'å¿å¡«å­æ®µ.',\n  minLength: 'å­ç¬¦é¿åº¦å¿é¡»å¤§äºæèç­äº {{minimumLength}} (å½åé¿åº¦: {{currentLength}})',\n  maxLength: 'å­ç¬¦é¿åº¦å¿é¡»å°äºæèç­äº {{maximumLength}} (å½åé¿åº¦: {{currentLength}})',\n  pattern: 'å¿é¡»å¹éæ­£åè¡¨è¾¾å¼: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'å¿é¡»ä¸ºæ¥ææ ¼å¼, æ¯å¦ \"2000-12-31\"';\n      case 'time':\n        return 'å¿é¡»ä¸ºæ¶é´æ ¼å¼, æ¯å¦ \"16:20\" æè \"03:14:15.9265\"';\n      case 'date-time':\n        return 'å¿é¡»ä¸ºæ¥ææ¶é´æ ¼å¼, æ¯å¦ \"2000-03-14T01:59\" æè \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'å¿é¡»ä¸ºé®ç®±å°å, æ¯å¦ \"name@example.com\"';\n      case 'hostname':\n        return 'å¿é¡»ä¸ºä¸»æºå, æ¯å¦ \"example.com\"';\n      case 'ipv4':\n        return 'å¿é¡»ä¸º IPv4 å°å, æ¯å¦ \"127.0.0.1\"';\n      case 'ipv6':\n        return 'å¿é¡»ä¸º IPv6 å°å, æ¯å¦ \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'å¿é¡»ä¸º url, æ¯å¦ \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'å¿é¡»ä¸º uuid, æ¯å¦ \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'å¿é¡»ä¸ºé¢è²å¼, æ¯å¦ \"#FFFFFF\" æè \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'å¿é¡»ä¸º JSON Pointer, æ¯å¦ \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'å¿é¡»ä¸ºç¸å¯¹ç JSON Pointer, æ¯å¦ \"2/pointer/to/something\"';\n      case 'regex':\n        return 'å¿é¡»ä¸ºæ­£åè¡¨è¾¾å¼, æ¯å¦ \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'å¿é¡»ä¸ºæ ¼å¼æ­£ç¡®ç ' + error.requiredFormat;\n    }\n  },\n  minimum: 'å¿é¡»å¤§äºæèç­äºæå°å¼: {{minimumValue}}',\n  exclusiveMinimum: 'å¿é¡»å¤§äºæå°å¼: {{exclusiveMinimumValue}}',\n  maximum: 'å¿é¡»å°äºæèç­äºæå¤§å¼: {{maximumValue}}',\n  exclusiveMaximum: 'å¿é¡»å°äºæå¤§å¼: {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `å¿é¡»æ ${decimals} ä½ææ´å°çå°æ°ä½`;\n    } else {\n      return `å¿é¡»ä¸º ${error.multipleOfValue} çåæ°`;\n    }\n  },\n  minProperties: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  maxProperties: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  minItems: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  maxItems: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  uniqueItems: 'ææé¡¹ç®å¿é¡»æ¯å¯ä¸ç',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport Ajv from 'ajv';\nimport jsonDraft6 from 'ajv/lib/refs/json-schema-draft-06.json';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport {\n  buildFormGroup,\n  buildFormGroupTemplate,\n  formatFormData,\n  getControl\n  } from './shared/form-group.functions';\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\nimport { buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences } from './shared/json-schema.functions';\nimport { enValidationMessages } from './locale/en-validation-messages';\nimport { frValidationMessages } from './locale/fr-validation-messages';\nimport { zhValidationMessages } from './locale/zh-validation-messages';\nimport {\n  fixTitle,\n  forEach,\n  hasOwn,\n  toTitleCase\n  } from './shared/utility.functions';\nimport {\n  hasValue,\n  isArray,\n  isDefined,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { Injectable } from '@angular/core';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { Subject } from 'rxjs';\n\n\n\nexport interface TitleMapItem {\n  name?: string; value?: any; checked?: boolean; group?: string; items?: TitleMapItem[];\n}\nexport interface ErrorMessages {\n  [control_name: string]: { message: string | Function | Object, code: string }[];\n}\n\n\n@Injectable()\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = 'en-US'; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    autocomplete: true, // Allow the web browser to remember previous form submission values as defaults\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\n    // for addSubmit: true = always, false = never,\n    // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: 'no-framework', // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\n    // true = always set (unless overridden by layout default or formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\n    // true = always set (unless overridden by formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\n    // true = validate all fields immediately\n    // false = only validate fields after they are touched by user\n    // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: { // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {} // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n    this.ajv.addMetaSchema(jsonDraft6);\n  }\n\n  setLanguage(language: string = 'en-US') {\n    this.language = language;\n    const languageValidationMessages = {\n        fr: frValidationMessages,\n        en: enValidationMessages,\n        zh: zhValidationMessages\n    };\n    const languageCode = language.slice(0, 2);\n\n    const validationMessages = languageValidationMessages[languageCode];\n\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\n      cloneDeep(validationMessages);\n  }\n\n  getData() { return this.data; }\n\n  getSchema() { return this.schema; }\n\n  getLayout() { return this.layout; }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error['code']] = error['message'];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue, this.dataMap, this.dataRecursiveRefMap,\n      this.arrayMap, this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = errors => {\n      const compiledErrors = {};\n      (errors || []).forEach(error => {\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\n      this.formValueSubscription = this.formGroup.valueChanges\n        .subscribe(formValue => this.validateData(formValue));\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      ['ErrorState', 'SuccessState']\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\n        .forEach(suffix => {\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\n          delete globalDefaults['disable' + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties['ui:order'])) {\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\n        delete this.schema.properties['ui:order'];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) { return buildSchemaFromLayout(layout); }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = '', value: any = {}, values: any = {}, key: number | string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = '', value: any = {}, values: any = {},\n    key: number | string = null, tpldata: any = null\n  ) {\n    if (typeof expression !== 'string') { return ''; }\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\n    expression = expression.trim();\n    if ((expression[0] === '\\'' || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === 'idx' || expression === '$index') { return index; }\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\n    if (['\"', '\\'', ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\n        JsonPointer.get(value, pointer.slice(1)) :\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\n          JsonPointer.get(values, pointer.slice(1)) :\n          pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\n            JsonPointer.get(tpldata, pointer.slice(1)) :\n            JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\n    }\n    if (expression.indexOf('[idx]') > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf('[$index]') > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf('||') > -1) {\n      return expression.split('||').reduce((all, term) =>\n        all || this.parseExpression(term, value, values, key, tpldata), ''\n      );\n    }\n    if (expression.indexOf('&&') > -1) {\n      return expression.split('&&').reduce((all, term) =>\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\n      ).trim();\n    }\n    if (expression.indexOf('+') > -1) {\n      return expression.split('+')\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\n        .join('');\n    }\n    return '';\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {}, childNode: any = null, index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== '$ref' ? [\n        [childNode, '/options/legend'],\n        [childNode, '/options/title'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend'],\n      ] : [\n          [childNode, '/options/title'],\n          [childNode, '/options/legend'],\n          [parentNode, '/options/title'],\n          [parentNode, '/options/legend']\n        ]\n    );\n    if (!text) { return text; }\n    const childValue = isArray(parentValues) && index < parentValues.length ?\n      parentValues[index] : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\n      null :\n      this.parseText(\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\n        this.getFormControlValue(this),\n        (this.getFormControlGroup(this) || <any>{}).value,\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === 'string') {\n        let pointer = layoutNode.options.condition;\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === 'model') {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === 'function') {\n        result = layoutNode.options.condition(this.data);\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\n        try {\n          const dynFn = new Function(\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error('condition functionBody errored out on evaluation: ' + layoutNode.options.condition.functionBody);\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) { return false; }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\n        ctx.layoutNode.options : cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\n      ctx.formControl.statusChanges.subscribe(status =>\n        ctx.options.errorMessage = status === 'VALID' ? null :\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\n      );\n      ctx.formControl.valueChanges.subscribe(value => {\n        if (!!value) { ctx.controlValue = value; }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) { return null; }\n    if (!isObject(validationMessages)) { validationMessages = {}; }\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\n    const formatError = (error) => typeof error === 'object' ?\n      Object.keys(error).map(key =>\n        error[key] === true ? addSpaces(key) :\n          error[key] === false ? 'Not ' + addSpaces(key) :\n            addSpaces(key) + ': ' + formatError(error[key])\n      ).join(', ') :\n      addSpaces(error.toString());\n    const messages = [];\n    return Object.keys(errors)\n      // Hide 'required' error, unless it is the only one\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\n      .map(errorKey =>\n        // If validationMessages is a string, return it\n        typeof validationMessages === 'string' ? validationMessages :\n          // If custom error message is a function, return function result\n          typeof validationMessages[errorKey] === 'function' ?\n            validationMessages[errorKey](errors[errorKey]) :\n            // If custom error message is a string, replace placeholders and return\n            typeof validationMessages[errorKey] === 'string' ?\n              // Does error message have any {{property}} placeholders?\n              !/{{.+?}}/.test(validationMessages[errorKey]) ?\n                validationMessages[errorKey] :\n                // Replace {{property}} placeholders with values\n                Object.keys(errors[errorKey])\n                  .reduce((errorMessage, errorProperty) => errorMessage.replace(\n                    new RegExp('{{' + errorProperty + '}}', 'g'),\n                    errors[errorKey][errorProperty]\n                  ), validationMessages[errorKey]) :\n              // If no custom error message, return formatted error data instead\n              addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\n      ).join('<br>');\n  }\n\n  updateValue(ctx: any, value: any): void {\n\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) { formArray.removeAt(0); }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) { return null; }\n    return '/' + ctx.layoutIndex.join('/items/');\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return false; }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else { // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\n    ) { return false; }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx))\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\n    } else { // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .removeControl(this.getFormControlName(ctx));\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import cloneDeep from 'lodash-es/cloneDeep';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean; draft?: number; }\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft }))];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [convertSchemaToDraft6(newSchema.extends, { changed, draft })];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [newSchema.dependencies[key]]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [properties[key].requires] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription;\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n        // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n          // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = ['additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = ['maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = ['maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array': [...numberKeys, ...objectKeys, ...stringKeys],\n            'integer': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'number': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'object': [...arrayKeys, ...numberKeys, ...stringKeys],\n            'string': [...arrayKeys, ...numberKeys, ...objectKeys],\n            'all': [...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![...(filterKeys[newType.type] || filterKeys.all), 'type', 'default']\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n          // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        ['definitions', 'dependencies', 'properties', 'patternProperties']\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        ['items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not'].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","/**\n * 'dateToString' function\n *\n * //  { Date | string } date\n * //   options\n * // { string }\n */\nexport function dateToString(date, options: any = {}) {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  if (typeof date === 'string') { date = stringToDate(date); }\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dateFormat\n    .replace(/YYYY/ig, date.getFullYear() + '')\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\n    .replace(/M/ig, (date.getMonth() + 1) + '')\n    .replace(/DDDD/ig, longDays[date.getDay()])\n    .replace(/DDD/ig, shortDays[date.getDay()])\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\n    .replace(/D/ig, date.getDate() + '')\n    .replace(/S/ig, ordinal(date.getDate()));\n}\n\nexport function ordinal(number: number|string): string {\n  if (typeof number === 'number') { number = number + ''; }\n  const last = number.slice(-1);\n  const nextToLast = number.slice(-2, 1);\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\n}\n\n/**\n * 'stringToDate' function\n *\n * //  { string } dateString\n * // { Date }\n */\nexport function stringToDate(dateString) {\n  const getDate: string = findDate(dateString);\n  if (!getDate) { return null; }\n  let dateParts: number[] = [];\n  // Split x-y-z to [x, y, z]\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\n  // Split xxxxyyzz to [xxxx, yy, zz]\n  } else if (/^\\d{8}$/.test(getDate)) {\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\n  }\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\n  // Check for [YYYY, MM, DD]\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);    \n  // Check for [MM, DD, YYYY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);    \n  // Check for [MM, DD, YY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\n    return new Date(year, dateParts[0] - 1, dateParts[1]);    \n  // Check for [YY, MM, DD]\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\n    return new Date(year, dateParts[1] - 1, dateParts[2]);    \n  }\n  return null;\n}\n\n/**\n * 'findDate' function\n *\n * //  { string } text\n * // { string }\n */\nexport function findDate(text) {\n  if (!text) { return null; }\n  let foundDate: any[];\n  // Match ...YYYY-MM-DD...\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match ...MM-DD-YYYY...\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match MM-DD-YY...\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YY-MM-DD...\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YYYYMMDD...\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\n  if (foundDate) { return foundDate[0]; }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (const checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', {\n      read: ViewContainerRef,\n      static: true })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef, static: true })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../shared/utility.functions';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef , static: true})\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Injectable } from '@angular/core';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable()\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (const widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        const usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Framework } from './framework';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Inject, Injectable } from '@angular/core';\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable()\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport isEqual from 'lodash-es/isEqual';\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\n\n\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n};\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form [autocomplete]=\"jsf?.formOptions?.autocomplete ? 'on' : 'off'\" class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output: <pre>{{debugOutput}}</pre>\n    </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n    schema: null, layout: null, data: null, options: null, framework: null,\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n    formData: null, loadExternalAssets: null, debug: null,\n  };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any|string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  }\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return stylesheets.map(stylesheet => load(stylesheet));\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return scripts.map(script => load(script));\n  }\n\n  ngOnInit() {\n    this.updateForm();\n  }\n\n  ngOnChanges() {\n    this.updateForm();\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n      // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n                                  // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n        // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    };\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n          // Copy other alternate layout options to schema 'x-schema-form',\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'no-framework',\n  template: `\n    <select-widget-widget\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { NoFrameworkComponent } from './no-framework.component';\n// No framework - plain HTML controls (styles from form layout only)\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          event.dataTransfer.setData('text', '');\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { OrderableDirective } from './orderable.directive';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\nexport { WidgetLibraryService } from './widget-library.service';\n","import { BASIC_WIDGETS } from './index';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OrderableDirective } from './orderable.directive';\n\n@NgModule({\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\n  entryComponents: [ ...BASIC_WIDGETS ],\n  providers:       [ JsonSchemaFormService ]\n})\nexport class WidgetLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WidgetLibraryModule,\n      providers: [ JsonSchemaFormService ]\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NoFramework } from './no.framework';\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n// No framework - plain HTML controls (styles from form layout only)\n\n@NgModule({\n  imports: [CommonModule, WidgetLibraryModule],\n  declarations: [NoFrameworkComponent],\n  exports: [NoFrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: NoFramework, multi: true }\n  ],\n  entryComponents: [NoFrameworkComponent]\n})\nexport class NoFrameworkModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-root-widget',\n  template: `\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\n      [style.order]=\"layoutNode?.options?.order\"\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\n    <div>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FlexLayoutRootComponent {\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  removeItem(item) {\n    this.jsf.removeItem(item);\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in flex-layout-section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>\n\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </fieldset>\n\n    <mat-card *ngIf=\"containerType === 'card'\"\n      [ngClass]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <mat-card-header *ngIf=\"sectionTitle\">\n        <legend\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n          [innerHTML]=\"sectionTitle\"\n          (click)=\"toggleExpanded()\"></legend>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"expanded\">\n        <fieldset [disabled]=\"options?.readonly\">\n          <flex-layout-root-widget *ngIf=\"expanded\"\n            [layout]=\"layoutNode.items\"\n            [dataIndex]=\"dataIndex\"\n            [layoutIndex]=\"layoutIndex\"\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n            [style.display]=\"getFlexAttribute('display')\"\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\n            [style.align-items]=\"getFlexAttribute('align-items')\"\n            [style.align-content]=\"getFlexAttribute('align-content')\"\n            [fxLayout]=\"getFlexAttribute('layout')\"\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n          </fieldset>\n      </mat-card-content>\n      <mat-card-footer>\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\n      </mat-card-footer>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\n      [expanded]=\"expanded\"\n      [hideToggle]=\"!options?.expandable\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <legend *ngIf=\"sectionTitle\"\n            [class]=\"options?.labelHtmlClass\"\n            [innerHTML]=\"sectionTitle\"\n            (click)=\"toggleExpanded()\"></legend>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <fieldset [disabled]=\"options?.readonly\">\n        <flex-layout-root-widget *ngIf=\"expanded\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n          [style.display]=\"getFlexAttribute('display')\"\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\n          [style.align-items]=\"getFlexAttribute('align-items')\"\n          [style.align-content]=\"getFlexAttribute('align-content')\"\n          [fxLayout]=\"getFlexAttribute('layout')\"\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      </fieldset>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </mat-expansion-panel>`,\n  styles: [`\n    fieldset { border: 0; margin: 0; padding: 0; }\n    .legend { font-weight: bold; }\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class FlexLayoutSectionComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  expanded = true;\n  containerType = 'div';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n        break;\n      case 'card':\n        this.containerType = 'card';\n        break;\n      case 'expansion-panel':\n        this.containerType = 'expansion-panel';\n        break;\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\n        this.containerType = 'div';\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in flex-layout-root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    // if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n      case 'layout':\n        return (this.options.fxLayout || 'row') +\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\n\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-add-reference-widget',\n  template: `\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\n      <button mat-raised-button *ngIf=\"showAddButton\"\n        [color]=\"options?.color || 'accent'\"\n        [disabled]=\"options?.readonly\"\n        (click)=\"addItem($event)\">\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n      </button>\n    </section>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MaterialAddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this),\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../../shared/utility.functions';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-widget',\n  template: `\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\n      <button mat-raised-button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n    styles: [` button { margin-top: 10px; } `],\n})\nexport class MaterialButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-group-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-button-toggle-group\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        [vertical]=\"!!options.vertical\">\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialButtonGroupComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  radiosList: any[] = [];\n  vertical = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkbox-widget',\n  template: `\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  showSlideToggle = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = false;\n      this.jsf.updateValue(this, this.falseValue);\n    }\n    if (this.layoutNode.type === 'slide-toggle' ||\n      this.layoutNode.format === 'slide-toggle'\n    ) {\n      this.showSlideToggle = true;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\n\n// TODO: Change this to use a Selection List instead?\n// https://material.angular.io/components/list/overview\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkboxes-widget',\n  template: `\n    <div>\n      <mat-checkbox type=\"checkbox\"\n        [checked]=\"allChecked\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [indeterminate]=\"someChecked\"\n        [name]=\"options?.name\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateAllValues($event)\">\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\n      </mat-checkbox>\n      <label *ngIf=\"options?.title\"\n        class=\"title\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\n        <li *ngFor=\"let checkboxItem of checkboxList\"\n          [class]=\"options?.htmlClass || ''\">\n          <mat-checkbox type=\"checkbox\"\n            [(ngModel)]=\"checkboxItem.checked\"\n            [color]=\"options?.color || 'primary'\"\n            [disabled]=\"controlDisabled || options?.readonly\"\n            [name]=\"checkboxItem?.name\"\n            (blur)=\"options.showErrors = true\"\n            (change)=\"updateValue()\">\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\n          </mat-checkbox>\n        </li>\n      </ul>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    .title { font-weight: bold; }\n    .checkbox-list { list-style-type: none; }\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  horizontalList = false;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      for (const checkboxItem of this.checkboxList) {\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\n      }\n    }\n  }\n\n  get allChecked(): boolean {\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\n  }\n\n  get someChecked(): boolean {\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\n  }\n\n  updateValue() {\n    this.options.showErrors = true;\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n\n  updateAllValues(event: any) {\n    this.options.showErrors = true;\n    this.checkboxList.forEach(t => t.checked = event.checked);\n    this.updateValue();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-chip-list-widget',\n  template: ``,\n})\nexport class MaterialChipListComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {Component, Inject, Input, OnInit, Optional} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { dateToString, stringToDate } from '../../shared';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-datepicker-widget',\n  template: `\n    <mat-form-field [appearance]=\"options?.appearance || matFormFieldDefaultOptions?.appearance || 'standard'\"\n                    [class]=\"options?.htmlClass || ''\"\n                    [floatLabel]=\"options?.floatLabel || matLabelGlobalOptions?.float || (options?.notitle ? 'never' : 'auto')\"\n                    [hideRequiredMarker]=\"options?.hideRequired ? 'true' : 'false'\"\n                    [style.width]=\"'100%'\">\n      <mat-label *ngIf=\"!options?.notitle\">{{options?.title}}</mat-label>\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n        <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [readonly]=\"options?.readonly\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [readonly]=\"options?.readonly\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    </mat-form-field>\n    <mat-datepicker #picker ></mat-datepicker>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialDatepickerComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  dateValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) @Optional() public matFormFieldDefaultOptions,\n    @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public matLabelGlobalOptions,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue) { this.setDate(dateToString(new Date(this.controlValue))); }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event: MatDatepickerInputEvent<Date> ) {\n    this.options.showErrors = true;\n    if (event.value) { this.setDate(dateToString(event.value)); }\n  }\n\n  setDate(date: string) {\n    this.formControl.setValue(date, this.options);\n  }\n\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { isDefined } from '../../shared';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-design-framework',\n  template: `\n    <div\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\n      [orderable]=\"isOrderable\"\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"widgetLayoutNode\">\n      <svg *ngIf=\"showRemoveButton\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\n        class=\"close-button\"\n        (click)=\"removeItem()\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\n      </svg>\n      <select-widget-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\n    </div>\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\n  styles: [`\n    .array-item {\n      border-radius: 2px;\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n                  0 2px 2px  0   rgba(0,0,0,.14),\n                  0 1px 5px  0   rgba(0,0,0,.12);\n      padding: 6px;\n      position: relative;\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\n    }\n    .close-button {\n      cursor: pointer;\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      fill: rgba(0,0,0,.4);\n      visibility: hidden;\n      z-index: 500;\n    }\n    .close-button:hover { fill: rgba(0,0,0,.8); }\n    .array-item:hover > .close-button { visibility: visible; }\n    .spacer { margin: 6px 0; }\n    [draggable=true]:hover {\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\n                  0 8px 10px 1px rgba(0,0,0,.14),\n                  0 3px 14px 2px rgba(0,0,0,.12);\n      cursor: move;\n      z-index: 10;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  inputType: string;\n  options: any; // Options used in this framework\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  widgetOptions: any; // Options passed to child widget\n  formControl: any = null;\n  parentArray: any = null;\n  isOrderable = false;\n  dynamicTitle: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.layoutNode || !this.widgetOptions.removable ||\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n    if (this.dynamicTitle) { this.updateTitle(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = cloneDeep(this.layoutNode.options || {});\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: cloneDeep(this.layoutNode.options || {})\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      if (\n        isDefined(this.widgetOptions.minimum) &&\n        isDefined(this.widgetOptions.maximum) &&\n        this.widgetOptions.multipleOf >= 1\n      ) {\n        this.layoutNode.type = 'range';\n      }\n\n      if (\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\n        /{{.+?}}/.test(this.widgetOptions.title || '')\n      ) {\n        this.dynamicTitle = this.widgetOptions.title;\n        this.updateTitle();\n      }\n\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n        this.parentArray = this.jsf.getParentNode(this);\n        if (this.parentArray) {\n          this.isOrderable =\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\n            this.layoutNode.arrayItemType === 'list' &&\n            !this.widgetOptions.readonly &&\n            this.parentArray.options.orderable;\n        }\n      }\n\n      this.frameworkInitialized = true;\n    } else {\n      this.options = {};\n    }\n  }\n\n  updateTitle() {\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\n      this.dynamicTitle,\n      this.jsf.getFormControlValue(this),\n      this.jsf.getFormControlGroup(this).value,\n      this.dataIndex[this.dataIndex.length - 1]\n    );\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-file-widget',\n  template: ``,\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport {Component, Inject, Input, OnInit, Optional} from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-input-widget',\n  template: `\n    <mat-form-field [appearance]=\"options?.appearance || matFormFieldDefaultOptions?.appearance || 'standard'\"\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || matLabelGlobalOptions?.float || (options?.notitle ? 'never' : 'auto')\"\n      [hideRequiredMarker]=\"options?.hideRequired ? 'true' : 'false'\"\n      [style.width]=\"'100%'\">\n      <mat-label *ngIf=\"!options?.notitle\">{{options?.title}}</mat-label>\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\n          [value]=\"word\">{{word}}</mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialInputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n\n  constructor(\n    @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) @Optional() public matFormFieldDefaultOptions,\n    @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public matLabelGlobalOptions,\n    private jsf: JsonSchemaFormService\n  ) {\n  }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {Component, Inject, Input, OnInit, Optional} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-number-widget',\n  template: `\n    <mat-form-field [appearance]=\"options?.appearance || matFormFieldDefaultOptions?.appearance || 'standard'\"\n    [class]=\"options?.htmlClass || ''\"\n    [floatLabel]=\"options?.floatLabel || matLabelGlobalOptions?.float || (options?.notitle ? 'never' : 'auto')\"\n    [hideRequiredMarker]=\"options?.hideRequired ? 'true' : 'false'\"\n    [style.width]=\"'100%'\">\n    <mat-label *ngIf=\"!options?.notitle\">{{options?.title}}</mat-label>\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\n        [innerHTML]=\"controlValue\"></mat-hint>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialNumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) @Optional() public matFormFieldDefaultOptions,\n    @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public matLabelGlobalOptions,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-one-of-widget',\n  template: ``,\n})\nexport class MaterialOneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-radios-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-radio-group *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [name]=\"controlName\"\n        (blur)=\"options.showErrors = true\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    mat-radio-group { display: inline-flex; }\n    mat-radio-button { margin: 2px; }\n    mat-error { font-size: 75%; }\n  `]\n})\nexport class MaterialRadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  flexDirection = 'column';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline') {\n      this.flexDirection = 'row';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../../shared';\nimport {Component, Inject, Input, OnInit, Optional} from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-select-widget',\n  template: `\n    <mat-form-field\n      [appearance]=\"options?.appearance || matFormFieldDefaultOptions?.appearance || 'standard'\"\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || matLabelGlobalOptions?.float || (options?.notitle ? 'never' : 'auto')\"\n      [hideRequiredMarker]=\"options?.hideRequired ? 'true' : 'false'\"\n      [style.width]=\"'100%'\">\n      <mat-label *ngIf=\"!options?.notitle\">{{options?.title}}</mat-label>\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <mat-select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [attr.selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialSelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) @Optional() public matFormFieldDefaultOptions,\n    @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public matLabelGlobalOptions,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-slider-widget',\n  template: `\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      (blur)=\"options.showErrors = true\"></mat-slider>\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      [value]=\"controlValue\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\"></mat-slider>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialSliderComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-stepper-widget',\n  template: ``,\n})\nexport class MaterialStepperComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-tabs-widget',\n  template: `\n    <nav mat-tab-nav-bar\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\n      [style.width]=\"'100%'\">\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\n          [active]=\"selectedItem === i\"\n          (click)=\"select(i)\">\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\n        </a>\n    </nav>\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class MaterialTabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    this.itemCount = this.layoutNode.items.length - 1;\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    this.showAddTab = lastItem.type === '$ref' &&\n      this.itemCount < (lastItem.options.maxItems || 1000);\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport {Component, Inject, Input, OnInit, Optional} from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-textarea-widget',\n  template: `\n    <mat-form-field [appearance]=\"options?.appearance || matFormFieldDefaultOptions?.appearance || 'standard'\"\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || matLabelGlobalOptions?.float || (options?.notitle ? 'never' : 'auto')\"\n      [hideRequiredMarker]=\"options?.hideRequired ? 'true' : 'false'\"\n      [style.width]=\"'100%'\">\n      <mat-label *ngIf=\"!options?.notitle\">{{options?.title}}</mat-label>\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <textarea matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <textarea matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialTextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) @Optional() public matFormFieldDefaultOptions,\n    @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public matLabelGlobalOptions,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\n// Material Design Framework\n// https://github.com/angular/material2\n\n@Injectable()\nexport class MaterialDesignFramework extends Framework {\n  name = 'material-design';\n\n  framework = MaterialDesignFrameworkComponent;\n\n  stylesheets = [\n    '//fonts.googleapis.com/icon?family=Material+Icons',\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\n  ];\n\n  widgets = {\n    'root':            FlexLayoutRootComponent,\n    'section':         FlexLayoutSectionComponent,\n    '$ref':            MaterialAddReferenceComponent,\n    'button':          MaterialButtonComponent,\n    'button-group':    MaterialButtonGroupComponent,\n    'checkbox':        MaterialCheckboxComponent,\n    'checkboxes':      MaterialCheckboxesComponent,\n    'chip-list':       MaterialChipListComponent,\n    'date':            MaterialDatepickerComponent,\n    'file':            MaterialFileComponent,\n    'number':          MaterialNumberComponent,\n    'one-of':          MaterialOneOfComponent,\n    'radios':          MaterialRadiosComponent,\n    'select':          MaterialSelectComponent,\n    'slider':          MaterialSliderComponent,\n    'stepper':         MaterialStepperComponent,\n    'tabs':            MaterialTabsComponent,\n    'text':            MaterialInputComponent,\n    'textarea':        MaterialTextareaComponent,\n    'alt-date':        'date',\n    'any-of':          'one-of',\n    'card':            'section',\n    'color':           'text',\n    'expansion-panel': 'section',\n    'hidden':          'none',\n    'image':           'none',\n    'integer':         'number',\n    'radiobuttons':    'button-group',\n    'range':           'slider',\n    'submit':          'button',\n    'tagsinput':       'chip-list',\n    'wizard':          'stepper',\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\nimport { NgModule } from '@angular/core';\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\nimport { fixAngularFlex } from './angular-flex-monkey-patch';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\n})\nexport class JsonSchemaFormModule {\n  constructor() {\n    fixAngularFlex();\n  }\n}\n","import { MediaMarshaller } from '@angular/flex-layout/core';\n\nexport function fixAngularFlex() {\n  // monkey patch based on errors in console  - https://github.com/angular/flex-layout/issues/1011\n  const MediaMarshallerUpdateElement = MediaMarshaller.prototype.updateElement;\n\n  MediaMarshaller.prototype.updateElement = function (element: HTMLElement, key: string, value: any) {\n    if (key === 'layout-gap' && (value === null || value === undefined)) {\n      value = '0px';\n    }\n    MediaMarshallerUpdateElement.apply(this, [element, key, value]);\n  };\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\n  MaterialButtonComponent, MaterialButtonGroupComponent,\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\n  MaterialChipListComponent, MaterialDatepickerComponent,\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\n  MaterialDesignFrameworkComponent\n];\n\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\nexport { MaterialOneOfComponent } from './material-one-of.component';\nexport { MaterialButtonComponent } from './material-button.component';\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nexport { MaterialChipListComponent } from './material-chip-list.component';\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\nexport { MaterialFileComponent } from './material-file.component';\nexport { MaterialInputComponent } from './material-input.component';\nexport { MaterialNumberComponent } from './material-number.component';\nexport { MaterialRadiosComponent } from './material-radios.component';\nexport { MaterialSelectComponent } from './material-select.component';\nexport { MaterialSliderComponent } from './material-slider.component';\nexport { MaterialStepperComponent } from './material-stepper.component';\nexport { MaterialTabsComponent } from './material-tabs.component';\nexport { MaterialTextareaComponent } from './material-textarea.component';\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n","import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\nimport { MaterialDesignFramework } from './material-design.framework';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n/**\n * unused @angular/material modules:\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\n * MatToolbarModule,\n */\nexport const ANGULAR_MATERIAL_MODULES = [\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule, JsonSchemaFormModule\n  ],\n  declarations: [...MATERIAL_FRAMEWORK_COMPONENTS],\n  exports: [JsonSchemaFormModule, ...MATERIAL_FRAMEWORK_COMPONENTS],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: MaterialDesignFramework, multi: true }\n  ],\n  entryComponents: [...MATERIAL_FRAMEWORK_COMPONENTS]\n})\nexport class MaterialDesignFrameworkModule { }\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport map from 'lodash-es/map';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-3-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n          <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      if (this.layoutNode.type !== 'flex')  {\n          this.options.htmlClass =\n            this.layoutNode.type === 'array' ?\n              addClasses(this.options.htmlClass, 'list-group') :\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n              addClasses(this.options.htmlClass, 'list-group-item') :\n              addClasses(this.options.htmlClass, 'form-group');\n      }\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n        break;\n        // Radio controls\n        case 'radio': case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n        break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Framework } from '../framework';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\n\n\n// Bootstrap 3 Framework\n// https://github.com/valor-software/ng2-bootstrap\n\n@Injectable()\nexport class Bootstrap3Framework extends Framework {\n  name = 'bootstrap-3';\n\n  framework = Bootstrap3FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\n  ];\n\n  scripts = [\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n  ];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\n\n\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap3FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap3FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap3Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap3FrameworkComponent]\n})\nexport class Bootstrap3FrameworkModule { }\n","import cloneDeep from 'lodash-es/cloneDeep';\nimport map from 'lodash-es/map';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-4-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group');\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n          break;\n        // Radio controls\n        case 'radio': case 'radios':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n          break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\n\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4';\n\n  framework = Bootstrap4FrameworkComponent;\n\n  stylesheets = [\n    '//stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css'\n  ];\n\n  scripts = [\n    '//code.jquery.com/jquery-3.3.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js',\n    '//stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js',\n  ];\n}\n","import { Bootstrap4Framework } from './bootstrap-4.framework';\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap4FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap4FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap4Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap4FrameworkComponent]\n})\nexport class Bootstrap4FrameworkModule { }\n"]}