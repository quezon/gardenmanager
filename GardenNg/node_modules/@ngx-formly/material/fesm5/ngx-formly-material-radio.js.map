{"version":3,"file":"ngx-formly-material-radio.js.map","sources":["ng://@ngx-formly/material/radio/radio.type.ts","ng://@ngx-formly/material/radio/radio.module.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType {\n  @ViewChild(MatRadioGroup) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  onContainerClick(event: MouseEvent): void {\n    const isRadioClick = this.radioGroup._radios\n      .map(radioButton => radioButton._elementRef.nativeElement as HTMLElement)\n      .some(el => el.contains(event.target as Element));\n\n    if (!isRadioClick && this.radioGroup._radios.length && !this.radioGroup.selected) {\n      this.radioGroup._radios.first.focus();\n    }\n    super.onContainerClick(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;;;;;IAqBsCA,oCAAS;IAjB/C;QAAA,qEAsCC;QAnBC,oBAAc,GAAG;YACf,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;gBACxB,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,CAAC,CAAC;aACb;SACF,CAAC;;KAYH;;;;;IAVC,2CAAgB;;;;IAAhB,UAAiB,KAAiB;;YAC1B,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO;aACzC,GAAG;;;;QAAC,UAAA,WAAW,8BAAI,WAAW,CAAC,WAAW,CAAC,aAAa,KAAe,EAAC;aACxE,IAAI;;;;QAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,QAAQ,oBAAC,KAAK,CAAC,MAAM,GAAY,GAAA,EAAC;QAEnD,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAChF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACvC;QACD,iBAAM,gBAAgB,YAAC,KAAK,CAAC,CAAC;KAC/B;;gBArCF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,sdAaT;iBACF;;;6BAEE,SAAS,SAAC,aAAa;;IAoB1B,uBAAC;CAAA,CArBqC,SAAS;;;;;;ACrB/C;IAWA;KAkBqC;;gBAlBpC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnB,cAAc;wBAEd,wBAAwB;wBACxB,kBAAkB;wBAClB,YAAY,CAAC,QAAQ,CAAC;4BACpB,KAAK,EAAE,CAAC;oCACN,IAAI,EAAE,OAAO;oCACb,SAAS,EAAE,gBAAgB;oCAC3B,QAAQ,EAAE,CAAC,YAAY,CAAC;iCACzB,CAAC;yBACH,CAAC;qBACH;iBACF;;IACmC,2BAAC;CAlBrC;;;;;;;;;;;;;;"}
