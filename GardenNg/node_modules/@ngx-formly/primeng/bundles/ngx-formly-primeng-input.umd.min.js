!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("primeng/inputtext"),require("@ngx-formly/primeng/form-field")):"function"==typeof define&&define.amd?define("@ngx-formly/primeng/input",["exports","@angular/core","@angular/common","@ngx-formly/core","@angular/forms","primeng/inputtext","@ngx-formly/primeng/form-field"],n):n(((e=e||self)["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].primeng=e["ngx-formly"].primeng||{},e["ngx-formly"].primeng.input={}),e.ng.core,e.ng.common,e.core$1,e.ng.forms,e.inputtext,e["ngx-formly"].primeng["form-field"])}(this,(function(e,n,r,o,t,i,m){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var p=function(e,n){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var r in n)n.hasOwnProperty(r)&&(e[r]=n[r])})(e,n)};var u=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return function(e,n){function r(){this.constructor=e}p(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}(r,e),r.decorators=[{type:n.Component,args:[{selector:"formly-field-primeng-input",template:'\n    <input\n      *ngIf="to.type !== \'number\'; else numberTmp"\n      pInputText\n      [type]="to.type || \'text\'"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n    />\n    <ng-template #numberTmp>\n      <input type="number" pInputText [formControl]="formControl" [formlyAttributes]="field" />\n    </ng-template>\n  '}]}],r}(o.FieldType),l=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[u],imports:[r.CommonModule,t.ReactiveFormsModule,i.InputTextModule,m.FormlyFormFieldModule,o.FormlyModule.forChild({types:[{name:"input",component:u,wrappers:["form-field"]}]})]}]}],e}();e.FormlyFieldInput=u,e.FormlyInputModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-formly-primeng-input.umd.min.js.map